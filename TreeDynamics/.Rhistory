# for lists that are empty, put the appropriate number of NAs in, based on the
# length of the corrected "QUAD"  list
} else if (row_length <= 1) {
split_list[[i]][[1]][1:max_length] <- NA
} else {
print("ERROR: value greater than 26 possibly detected")
# ideally, would want to print which file once this is written for multiple
}
}
data <- data.frame(matrix(unlist(split_list),
nrow = length(split_list),
byrow = T))
# Now to get 2nd rows to tack onto the first row
# Tidyverse: filter based on odd/even rows
# starting at row 1, select evey second row (odds)
data_pt1 <- data %>% filter(row_number() %% 2 == 1)
# same for evens:
data_pt2 <- data %>% filter(row_number() %% 2 == 0)
# cbind to get everything together:
data1985 <- cbind(data_pt1, data_pt2)
# de-select the NA rows I added to make it a data frame:
data1985 <- data1985[c(1:45)]
#get rid of the 2nd half quadrat names:
data1985 <- data1985[-(27)]
# add columns
data1985 <- rbind(species, data1985) # it works!!
# make 1st row column names:
data1985 <- data1985 %>%
row_to_names(row_number = 1)
con <- file('C:/Users/Jenna/OneDrive - The University Of British Columbia/LDP/Data to clean/Vascular Plant Surveys/Stand 2 (missing some)/old versions of the missing files/s285.v_data.txt')
open(con)
# make a list to put the results into
results_list <- list()
# start with the first line in the file and cycle through all of them
current_line <- 1
while (length(line <- readLines(con, n = 1, warn = FALSE)) > 0) {
results_list[current_line] <- line
current_line <- current_line + 1
}
# close the connection to the file
close(con)
# CLEAN FILE #
# remove remaining white spaces
results_list <- lapply(results_list, str_trim, side = "both") %>%
lapply(., str_squish)
# this one doesn't have metadata
#gsub finds the 0.01's and replaces them with 0 and .01. The next step will recognize that they're separate because of the space. It saves as a "value", but after the next line it ends up as "data" again.
results_list <- gsub(".01", " .01", results_list, fixed = TRUE)
# for 1985, looks like they started doing quads 4 twice, and entering the mean value between them. So, let's deal with these:
#first, seperate temperatures from the long string of stuck together numbers
results_list <- gsub("52", "52 ", results_list, fixed = TRUE)
results_list <- gsub("62", "62 ", results_list, fixed = TRUE)
results_list <- gsub("61", "61 ", results_list, fixed = TRUE)
results_list <- gsub(".55", " .55", results_list, fixed = TRUE)
results_list <- gsub(".06", " .06", results_list, fixed = TRUE)
results_list <- gsub("1.3", " 1.3", results_list, fixed = TRUE)
results_list <- gsub("1.5", " 1.5", results_list, fixed = TRUE)
results_list <- gsub("2.5", " 2.5", results_list, fixed = TRUE)
results_list <- gsub("4.5", " 4.5", results_list, fixed = TRUE)
results_list <- gsub("5.5", " 5.5", results_list, fixed = TRUE)
results_list <- gsub(".75", " .75", results_list, fixed = TRUE)
results_list <- gsub("1.2", " 1.2", results_list, fixed = TRUE)
results_list <- gsub("6.5", " 6.5", results_list, fixed = TRUE)
results_list <- gsub("3.5", " 3.5", results_list, fixed = TRUE)
results_list <- gsub(".05", " .05", results_list, fixed = TRUE)
results_list <- gsub("7.5", " 7.5", results_list, fixed = TRUE)
results_list <- gsub(".26", " .26", results_list, fixed = TRUE)
results_list <- gsub("9.5", " 9.5", results_list, fixed = TRUE)
results_list <- gsub("8.5", " 8.5", results_list, fixed = TRUE)
results_list <- gsub("0.3", " 0.3", results_list, fixed = TRUE)
results_list <- gsub("2.6", " 2.6", results_list, fixed = TRUE)
results_list <- gsub("1.8", " 1.8", results_list, fixed = TRUE)
# take out any extra spaces that those changes put in:
results_list <- lapply(results_list, str_trim, side = "both") %>%
lapply(., str_squish)
# get the rows after the metadata and unlist them so each value gets read
# separately; otherwise, each row is one big long character string
split_list <- lapply(results_list[1:length(results_list)],
str_split,
pattern = " ")
# even after that, this row has an extra space:
#split_list[split_list[275] != ""]
# in order to bind the list together as rows, they need to be the same length.
for (i in 1:length(split_list)){
# get length of row
# 31 is assuming only 1 sub-stand in ever surveyed twice
# if 31 is not the maximum length, we'll need to edit this code
max_length <- 26
row_length <- length(split_list[[i]][[1]])
# for lists that start with "QUAD," find length of "row" (actually a list)
if (row_length > 1){
# this code adds NAs to the row to match max_length
if (row_length < max_length) {
add_NAs <- vector(mode = "character", length = (max_length - row_length)) %>%
na_if("")
split_list[[i]][[1]] <- c(split_list[[i]][[1]], add_NAs)
}
# for lists that are empty, put the appropriate number of NAs in, based on the
# length of the corrected "QUAD"  list
} else if (row_length <= 1) {
split_list[[i]][[1]][1:max_length] <- NA
} else {
print("ERROR: value greater than 26 possibly detected")
# ideally, would want to print which file once this is written for multiple
}
}
data <- data.frame(matrix(unlist(split_list),
nrow = length(split_list),
byrow = T))
# Now to get 2nd rows to tack onto the first row
# Tidyverse: filter based on odd/even rows
# starting at row 1, select evey second row (odds)
data_pt1 <- data %>% filter(row_number() %% 2 == 1)
# same for evens:
data_pt2 <- data %>% filter(row_number() %% 2 == 0)
# cbind to get everything together:
data1985 <- cbind(data_pt1, data_pt2)
### there is an extra .1 for Aug E2, it looks like it was an enter error, so ignoring it
# de-select the NA rows I added to make it a data frame:
data1985 <- data1985[c(1:45)]
#get rid of the 2nd half quadrat names:
data1985 <- data1985[-(27)]
# add columns
data1985 <- rbind(species, data1985) # it works!!
# make 1st row column names:
data1985 <- data1985 %>%
row_to_names(row_number = 1)
# make column for month, and a year column:
data1985$month <- NA
data1985$year <- 1985
data1985$stand <- 2
# add months based on row numbers:
data1985[c(1:25), 45] = "5"
data1985[c(26:50), 45] = "6"
data1985[c(51:75), 45] = "7"
data1985[c(76:100), 45] = "8"
data1985[c(101:125), 45] = "9"
data1985[c(126:150), 45] = "10"
## the plot no.'s have a number at the end - taking it off by just adding quadrat column from 1981
quad <- select(data1981, (1))
data1985 <- cbind(data1985, quad)
data1985 <- data1985[-(1)]
#reorder:
data1985_clean <- data1985 %>%
select(stand, year, month, PLOT, everything())
View(data1985_clean)
source('C:/Users/Jenna/OneDrive - The University Of British Columbia/LDP/Data to clean/Vascular Plant Surveys/stand2.R')
View(stand2)
setwd("C:/Users/Jenna/OneDrive - The University Of British Columbia/LDP/Tree Dynamics")
stand1 <- read.csv("Data from 2003 cleaning/Seadyn Stand 1 Data.csv", header = F)
stand1 <- read.csv("Data from 2003 cleaning/Seadyn Stand 1 Data.csv", header = F)
stand2 <- read.csv("Data from 2003 cleaning/Seadyn Stand 2 Data.csv", header = F)
stand3 <- read.csv("Data from 2003 cleaning/Seadyn Stand 3 Data.csv", header = F)
stand4 <- read.csv("Data from 2003 cleaning/Seadyn Stand 4 Data.csv", header = F)
stand5 <- read.csv("Data from 2003 cleaning/Seadyn Stand 5 Data.csv", header = F)
stand6 <- read.csv("Data from 2003 cleaning/Seadyn Stand 6 Data.csv", header = F)
stand7 <- read.csv("Data from 2003 cleaning/Seadyn Stand 7 Data.csv", header = F)
stand8 <- read.csv("Data from 2003 cleaning/Seadyn Stand 8 Data.csv", header = F)
column_names <- c("stand", "plot", "tag", "species_code", "DBH_1983_in", "base_coord_N_1983_m", "base_coord_S_1983_m", "base_coord_E_1983_m", "base_coord_W_1983_m", "year_dead", "fallen_stem_length_1983_m", "exit_coord_N_1983_m", "exit_coord_S_1983_m", "exit_coord_E_1983_m", "exit_coord_W_1983_m", "year_fallen_1983", "status", "age_1983", "stem_height_1983_m", "stem_lean_amt_scaled_1983", "stem_lean_dir_1983", "stem_lean_amt_1991", "stem_lean_dir_1991", "stem_lean_amt_2000", "stem_lean_dir_2000",
"crown_width_NS_1983_m", "crown_width_EW_1983_m", "height_to_crown_1983_m", "fill_perc_1983", "BSD_1983", "radial_10year_inc_1983_mm", "DBH_1991_cm", "DBH_2000_cm", "height_2000_m", "unknown_code", "fire_code_2000", "unknown_dummy", "comments")
stand1_clean <- rbind(column_names, stand1)
stand1_clean <- janitor::row_to_names(stand1_clean, row_number = 1)
stand1_clean <- stand1_clean[-c(1:6),]
# each df has different numbers of rows at the beginning, so need to change them seperately:
stand2_clean <- rbind(column_names, stand2)
stand2_clean <- janitor::row_to_names(stand2_clean, row_number = 1)
stand2_clean <- stand2_clean[-c(1:5),]
stand3_clean <- rbind(column_names, stand3)
stand3_clean <- janitor::row_to_names(stand3_clean, row_number = 1)
stand3_clean <- stand3_clean[-c(1:5),]
stand4_clean <- rbind(column_names, stand4)
stand4_clean <- janitor::row_to_names(stand4_clean, row_number = 1)
stand4_clean <- stand4_clean[-c(1:5),]
stand5_clean <- rbind(column_names, stand5)
stand5_clean <- janitor::row_to_names(stand5_clean, row_number = 1)
stand5_clean <- stand5_clean[-c(1:4),]
stand6_clean <- rbind(column_names, stand6)
stand6_clean <- janitor::row_to_names(stand6_clean, row_number = 1)
stand6_clean <- stand6_clean[-c(1:5),]
stand7_clean <- rbind(column_names, stand7)
stand7_clean <- janitor::row_to_names(stand7_clean, row_number = 1)
stand7_clean <- stand7_clean[-c(1:5),]
stand8_clean <- rbind(column_names, stand8)
stand8_clean <- janitor::row_to_names(stand8_clean, row_number = 1)
stand8_clean <- stand8_clean[-c(1:5),]
#bind them into one data frame:
tree_dyn <- do.call("rbind", list(stand1_clean, stand2_clean, stand3_clean, stand4_clean, stand5_clean, stand6_clean, stand7_clean, stand8_clean))
# remove blank rows
tree_dyn <- tree_dyn[c(1:7335),]
# change periods to NA's:
is.na(tree_dyn) <- tree_dyn == "."
# there are two X species - what are these??
# they are supposed to be "S" species - says so on data sheet!
tree_dyn$species_code[tree_dyn$tag == "5270"]  <- "S"
tree_dyn$species_code[tree_dyn$tag == "5271"]  <- "S"
# changing these species codes to match the ones used in vascular surveys:
#- species codes: A = POTR, B = BEPA, F = ABBA, J = PIBA, L = LALA, P = POBA, S = PIMA, W = PIGL
tree_dyn$species_code[tree_dyn$species_code == "A"]  <- "POTR"
tree_dyn$species_code[tree_dyn$species_code == "B"]  <- "BEPA"
tree_dyn$species_code[tree_dyn$species_code == "F"]  <- "ABBA"
tree_dyn$species_code[tree_dyn$species_code == "J"]  <- "PIBA"
tree_dyn$species_code[tree_dyn$species_code == "L"]  <- "LALA"
tree_dyn$species_code[tree_dyn$species_code == "P"]  <- "POTR"
tree_dyn$species_code[tree_dyn$species_code == "S"]  <- "PIMA"
tree_dyn$species_code[tree_dyn$species_code == "W"]  <- "PIGL"
unique(tree_dyn$species_code)
# change dbh in 1983 from inches to cm (like the rest of the dbh measurements)
tree_dyn <-  tree_dyn %>%
mutate(DBH_1983_in = as.numeric(DBH_1983_in),
DBH_1983_cm = DBH_1983_in * 2.54) %>%
select(-DBH_1983_in) %>%
relocate(DBH_1983_cm, .after = species_code)
# removing unknown columns
tree_dyn <-  tree_dyn %>%
select(-c(unknown_dummy, status))
View(tree_dyn)
# removing unknown columns
tree_dyn <-  tree_dyn %>%
select(-c(unknown_dummy, status))
tree_dyn <- do.call("rbind", list(stand1_clean, stand2_clean, stand3_clean, stand4_clean, stand5_clean, stand6_clean, stand7_clean, stand8_clean))
# remove blank rows
tree_dyn <- tree_dyn[c(1:7335),]
# change periods to NA's:
is.na(tree_dyn) <- tree_dyn == "."
# there are two X species - what are these??
# they are supposed to be "S" species - says so on data sheet!
tree_dyn$species_code[tree_dyn$tag == "5270"]  <- "S"
tree_dyn$species_code[tree_dyn$tag == "5271"]  <- "S"
# changing these species codes to match the ones used in vascular surveys:
#- species codes: A = POTR, B = BEPA, F = ABBA, J = PIBA, L = LALA, P = POBA, S = PIMA, W = PIGL
tree_dyn$species_code[tree_dyn$species_code == "A"]  <- "POTR"
tree_dyn$species_code[tree_dyn$species_code == "B"]  <- "BEPA"
tree_dyn$species_code[tree_dyn$species_code == "F"]  <- "ABBA"
tree_dyn$species_code[tree_dyn$species_code == "J"]  <- "PIBA"
tree_dyn$species_code[tree_dyn$species_code == "L"]  <- "LALA"
tree_dyn$species_code[tree_dyn$species_code == "P"]  <- "POTR"
tree_dyn$species_code[tree_dyn$species_code == "S"]  <- "PIMA"
tree_dyn$species_code[tree_dyn$species_code == "W"]  <- "PIGL"
unique(tree_dyn$species_code)
# change dbh in 1983 from inches to cm (like the rest of the dbh measurements)
tree_dyn <-  tree_dyn %>%
mutate(DBH_1983_in = as.numeric(DBH_1983_in),
DBH_1983_cm = DBH_1983_in * 2.54) %>%
select(-DBH_1983_in) %>%
relocate(DBH_1983_cm, .after = species_code)
library(tidyverse)
library(janitor)
source('C:/Users/Jenna/OneDrive - The University Of British Columbia/LDP/Tree Dynamics/Scripts/TreeDynamics_ReadInCleaning.R')
View(tree_dyn2)
# reading these into their own files:
stand1 <- tree_dyn2 %>% filter(stand == "1")
View(stand1)
write.csv(stand1, "Cleaned Data/Tree_Dynamics_Stand_1.csv")
# reading these into their own files:
stand1 <- tree_dyn2 %>% filter(stand == "1")
write.csv(stand1, "Cleaned Data/Tree_Dynamics_Stand_1.csv")
stand2 <- tree_dyn2 %>% filter(stand == "2")
write.csv(stand2, "Cleaned Data/Tree_Dynamics_Stand_2.csv")
stand3 <- tree_dyn2 %>% filter(stand == "3")
write.csv(stand3, "Cleaned Data/Tree_Dynamics_Stand_3.csv")
stand4 <- tree_dyn2 %>% filter(stand == "4")
write.csv(stand4, "Cleaned Data/Tree_Dynamics_Stand_4.csv")
stand5 <- tree_dyn2 %>% filter(stand == "5")
write.csv(stand5, "Cleaned Data/Tree_Dynamics_Stand_5.csv")
stand6 <- tree_dyn2 %>% filter(stand == "6")
write.csv(stand6, "Cleaned Data/Tree_Dynamics_Stand_6.csv")
stand7 <- tree_dyn2 %>% filter(stand == "7")
write.csv(stand7, "Cleaned Data/Tree_Dynamics_Stand_7.csv")
stand8 <- tree_dyn8 %>% filter(stand == "8")
write.csv(stand8, "Cleaned Data/Tree_Dynamics_Stand_8.csv")
stand8 <- tree_dyn2 %>% filter(stand == "8")
write.csv(stand8, "Cleaned Data/Tree_Dynamics_Stand_8.csv")
source('C:/Users/Jenna/OneDrive - The University Of British Columbia/LDP/Tree Dynamics/Scripts/TreeDynamics_ReadInCleaning.R')
View(tree_dyn2)
unique(tree_dyn2$stem_lean_amt_scaled_1983)
# for scaled stem lean in 1983, s, m, and l are small, medium, and large. Changing them all to upper case:
tree_dyn2$stem_lean_amt_scaled_1983[tree_dyn2$stem_lean_amt_scaled_1983 == "s"] <- "S"
# for scaled stem lean in 1983, s, m, and l are small, medium, and large. Changing them all to upper case:
tree_dyn2$stem_lean_amt_scaled_1983[tree_dyn2$stem_lean_amt_scaled_1983 == "m"] <- "M"
unique(tree_dyn2$stem_lean_amt_scaled_1983)
tree_dyn2$stem_lean_amt_scaled_1983[tree_dyn2$stem_lean_amt_scaled_1983 == "l"] <- "L"
unique(tree_dyn2$stem_lean_amt_scaled_1983)
source('C:/Users/Jenna/OneDrive - The University Of British Columbia/LDP/Tree Dynamics/Scripts/TreeDynamics_ReadInCleaning.R')
###########################################################################################
summary(tree_dyn2)
source('C:/Users/Jenna/OneDrive - The University Of British Columbia/LDP/Tree Dynamics/Scripts/TreeDynamics_ReadInCleaning.R')
source('C:/Users/Jenna/OneDrive - The University Of British Columbia/LDP/Tree Dynamics/Scripts/TreeDynamics_ReadInCleaning.R')
library(tidyverse)
library(janitor)
stand1 <- read.csv("Data from 2003 cleaning/Seadyn Stand 1 Data.csv", header = F)
stand2 <- read.csv("Data from 2003 cleaning/Seadyn Stand 2 Data.csv", header = F)
stand3 <- read.csv("Data from 2003 cleaning/Seadyn Stand 3 Data.csv", header = F)
stand4 <- read.csv("Data from 2003 cleaning/Seadyn Stand 4 Data.csv", header = F)
stand5 <- read.csv("Data from 2003 cleaning/Seadyn Stand 5 Data.csv", header = F)
stand6 <- read.csv("Data from 2003 cleaning/Seadyn Stand 6 Data.csv", header = F)
stand7 <- read.csv("Data from 2003 cleaning/Seadyn Stand 7 Data.csv", header = F)
stand8 <- read.csv("Data from 2003 cleaning/Seadyn Stand 8 Data.csv", header = F)
column_names <- c("stand", "plot", "tag", "species_code", "DBH_1983_in", "base_coord_N_1983_m", "base_coord_S_1983_m", "base_coord_E_1983_m", "base_coord_W_1983_m", "year_dead", "fallen_stem_length_1983_m", "exit_coord_N_1983_m", "exit_coord_S_1983_m", "exit_coord_E_1983_m", "exit_coord_W_1983_m", "year_fallen_1983", "status", "age_1983", "stem_height_1983_m", "stem_lean_amt_scaled_1983", "stem_lean_dir_1983", "stem_lean_amt_1991", "stem_lean_dir_1991", "stem_lean_amt_2000", "stem_lean_dir_2000",
"crown_width_NS_1983_m", "crown_width_EW_1983_m", "height_to_crown_1983_m", "fill_perc_1983", "BSD_1983", "radial_10year_inc_1983_mm", "DBH_1991_cm", "DBH_2000_cm", "height_2000_m", "tree_code_2000", "fire_code_2000", "unknown_dummy", "comments")
stand1_clean <- rbind(column_names, stand1)
stand1_clean <- janitor::row_to_names(stand1_clean, row_number = 1)
stand1_clean <- stand1_clean[-c(1:6),]
# each df has different numbers of rows at the beginning, so need to change them seperately:
stand2_clean <- rbind(column_names, stand2)
stand2_clean <- janitor::row_to_names(stand2_clean, row_number = 1)
stand2_clean <- stand2_clean[-c(1:5),]
stand3_clean <- rbind(column_names, stand3)
stand3_clean <- janitor::row_to_names(stand3_clean, row_number = 1)
stand3_clean <- stand3_clean[-c(1:5),]
stand4_clean <- rbind(column_names, stand4)
stand4_clean <- janitor::row_to_names(stand4_clean, row_number = 1)
stand4_clean <- stand4_clean[-c(1:5),]
stand5_clean <- rbind(column_names, stand5)
stand5_clean <- janitor::row_to_names(stand5_clean, row_number = 1)
stand5_clean <- stand5_clean[-c(1:4),]
stand6_clean <- rbind(column_names, stand6)
stand6_clean <- janitor::row_to_names(stand6_clean, row_number = 1)
stand6_clean <- stand6_clean[-c(1:5),]
stand7_clean <- rbind(column_names, stand7)
stand7_clean <- janitor::row_to_names(stand7_clean, row_number = 1)
stand7_clean <- stand7_clean[-c(1:5),]
stand8_clean <- rbind(column_names, stand8)
stand8_clean <- janitor::row_to_names(stand8_clean, row_number = 1)
stand8_clean <- stand8_clean[-c(1:5),]
#bind them into one data frame:
tree_dyn <- do.call("rbind", list(stand1_clean, stand2_clean, stand3_clean, stand4_clean, stand5_clean, stand6_clean, stand7_clean, stand8_clean))
# remove blank rows
tree_dyn <- tree_dyn[c(1:7335),]
# change periods to NA's:
is.na(tree_dyn) <- tree_dyn == "."
# there are two X species - what are these??
# they are supposed to be "S" species - says so on data sheet!
tree_dyn$species_code[tree_dyn$tag == "5270"]  <- "S"
tree_dyn$species_code[tree_dyn$tag == "5271"]  <- "S"
# changing these species codes to match the ones used in vascular surveys:
#- species codes: A = POTR, B = BEPA, F = ABBA, J = PIBA, L = LALA, P = POBA, S = PIMA, W = PIGL
tree_dyn$species_code[tree_dyn$species_code == "A"]  <- "POTR"
tree_dyn$species_code[tree_dyn$species_code == "B"]  <- "BEPA"
tree_dyn$species_code[tree_dyn$species_code == "F"]  <- "ABBA"
tree_dyn$species_code[tree_dyn$species_code == "J"]  <- "PIBA"
tree_dyn$species_code[tree_dyn$species_code == "L"]  <- "LALA"
tree_dyn$species_code[tree_dyn$species_code == "P"]  <- "POTR"
tree_dyn$species_code[tree_dyn$species_code == "S"]  <- "PIMA"
tree_dyn$species_code[tree_dyn$species_code == "W"]  <- "PIGL"
unique(tree_dyn$species_code)
View(tree_dyn)
# change dbh in 1983 from inches to cm (like the rest of the dbh measurements)
tree_dyn <-  tree_dyn %>%
mutate(DBH_1983_in = as.numeric(DBH_1983_in),
DBH_1983_cm = DBH_1983_in * 2.54,
DBH_1983_cm = round(2)) %>%
select(-DBH_1983_in) %>%
relocate(DBH_1983_cm, .after = species_code)
library(tidyverse)
library(janitor)
stand1 <- read.csv("Data from 2003 cleaning/Seadyn Stand 1 Data.csv", header = F)
stand2 <- read.csv("Data from 2003 cleaning/Seadyn Stand 2 Data.csv", header = F)
stand3 <- read.csv("Data from 2003 cleaning/Seadyn Stand 3 Data.csv", header = F)
stand4 <- read.csv("Data from 2003 cleaning/Seadyn Stand 4 Data.csv", header = F)
stand5 <- read.csv("Data from 2003 cleaning/Seadyn Stand 5 Data.csv", header = F)
stand6 <- read.csv("Data from 2003 cleaning/Seadyn Stand 6 Data.csv", header = F)
stand7 <- read.csv("Data from 2003 cleaning/Seadyn Stand 7 Data.csv", header = F)
stand8 <- read.csv("Data from 2003 cleaning/Seadyn Stand 8 Data.csv", header = F)
column_names <- c("stand", "plot", "tag", "species_code", "DBH_1983_in", "base_coord_N_1983_m", "base_coord_S_1983_m", "base_coord_E_1983_m", "base_coord_W_1983_m", "year_dead", "fallen_stem_length_1983_m", "exit_coord_N_1983_m", "exit_coord_S_1983_m", "exit_coord_E_1983_m", "exit_coord_W_1983_m", "year_fallen_1983", "status", "age_1983", "stem_height_1983_m", "stem_lean_amt_scaled_1983", "stem_lean_dir_1983", "stem_lean_amt_1991", "stem_lean_dir_1991", "stem_lean_amt_2000", "stem_lean_dir_2000",
"crown_width_NS_1983_m", "crown_width_EW_1983_m", "height_to_crown_1983_m", "fill_perc_1983", "BSD_1983", "radial_10year_inc_1983_mm", "DBH_1991_cm", "DBH_2000_cm", "height_2000_m", "tree_code_2000", "fire_code_2000", "unknown_dummy", "comments")
stand1_clean <- rbind(column_names, stand1)
stand1_clean <- janitor::row_to_names(stand1_clean, row_number = 1)
stand1_clean <- stand1_clean[-c(1:6),]
# each df has different numbers of rows at the beginning, so need to change them seperately:
stand2_clean <- rbind(column_names, stand2)
stand2_clean <- janitor::row_to_names(stand2_clean, row_number = 1)
stand2_clean <- stand2_clean[-c(1:5),]
stand3_clean <- rbind(column_names, stand3)
stand3_clean <- janitor::row_to_names(stand3_clean, row_number = 1)
stand3_clean <- stand3_clean[-c(1:5),]
stand4_clean <- rbind(column_names, stand4)
stand4_clean <- janitor::row_to_names(stand4_clean, row_number = 1)
stand4_clean <- stand4_clean[-c(1:5),]
stand5_clean <- rbind(column_names, stand5)
stand5_clean <- janitor::row_to_names(stand5_clean, row_number = 1)
stand5_clean <- stand5_clean[-c(1:4),]
stand6_clean <- rbind(column_names, stand6)
stand6_clean <- janitor::row_to_names(stand6_clean, row_number = 1)
stand6_clean <- stand6_clean[-c(1:5),]
stand7_clean <- rbind(column_names, stand7)
stand7_clean <- janitor::row_to_names(stand7_clean, row_number = 1)
stand7_clean <- stand7_clean[-c(1:5),]
stand8_clean <- rbind(column_names, stand8)
stand8_clean <- janitor::row_to_names(stand8_clean, row_number = 1)
stand8_clean <- stand8_clean[-c(1:5),]
#bind them into one data frame:
tree_dyn <- do.call("rbind", list(stand1_clean, stand2_clean, stand3_clean, stand4_clean, stand5_clean, stand6_clean, stand7_clean, stand8_clean))
# remove blank rows
tree_dyn <- tree_dyn[c(1:7335),]
# change periods to NA's:
is.na(tree_dyn) <- tree_dyn == "."
# there are two X species - what are these??
# they are supposed to be "S" species - says so on data sheet!
tree_dyn$species_code[tree_dyn$tag == "5270"]  <- "S"
tree_dyn$species_code[tree_dyn$tag == "5271"]  <- "S"
# changing these species codes to match the ones used in vascular surveys:
#- species codes: A = POTR, B = BEPA, F = ABBA, J = PIBA, L = LALA, P = POBA, S = PIMA, W = PIGL
tree_dyn$species_code[tree_dyn$species_code == "A"]  <- "POTR"
tree_dyn$species_code[tree_dyn$species_code == "B"]  <- "BEPA"
tree_dyn$species_code[tree_dyn$species_code == "F"]  <- "ABBA"
tree_dyn$species_code[tree_dyn$species_code == "J"]  <- "PIBA"
tree_dyn$species_code[tree_dyn$species_code == "L"]  <- "LALA"
tree_dyn$species_code[tree_dyn$species_code == "P"]  <- "POTR"
tree_dyn$species_code[tree_dyn$species_code == "S"]  <- "PIMA"
tree_dyn$species_code[tree_dyn$species_code == "W"]  <- "PIGL"
unique(tree_dyn$species_code)
# change dbh in 1983 from inches to cm (like the rest of the dbh measurements)
tree_dyn <-  tree_dyn %>%
mutate(DBH_1983_in = as.numeric(DBH_1983_in),
DBH_1983_cm = DBH_1983_in * 2.54,
DBH_1983_cm = round(3)) %>%
select(-DBH_1983_in) %>%
relocate(DBH_1983_cm, .after = species_code)
## Living Data Project
# SEADYN Hondo Tree Dynamics
# Jenna Loesberg, February 16th, 2021
### What this script does:
# - Read in the 8 tree dynamics data files
# - change the coloumn names into something sensible
# - some data cleaning before reading into new, final csv's
library(tidyverse)
library(janitor)
stand1 <- read.csv("Data from 2003 cleaning/Seadyn Stand 1 Data.csv", header = F)
stand2 <- read.csv("Data from 2003 cleaning/Seadyn Stand 2 Data.csv", header = F)
stand3 <- read.csv("Data from 2003 cleaning/Seadyn Stand 3 Data.csv", header = F)
stand4 <- read.csv("Data from 2003 cleaning/Seadyn Stand 4 Data.csv", header = F)
stand5 <- read.csv("Data from 2003 cleaning/Seadyn Stand 5 Data.csv", header = F)
stand6 <- read.csv("Data from 2003 cleaning/Seadyn Stand 6 Data.csv", header = F)
stand7 <- read.csv("Data from 2003 cleaning/Seadyn Stand 7 Data.csv", header = F)
stand8 <- read.csv("Data from 2003 cleaning/Seadyn Stand 8 Data.csv", header = F)
column_names <- c("stand", "plot", "tag", "species_code", "DBH_1983_in", "base_coord_N_1983_m", "base_coord_S_1983_m", "base_coord_E_1983_m", "base_coord_W_1983_m", "year_dead", "fallen_stem_length_1983_m", "exit_coord_N_1983_m", "exit_coord_S_1983_m", "exit_coord_E_1983_m", "exit_coord_W_1983_m", "year_fallen_1983", "status", "age_1983", "stem_height_1983_m", "stem_lean_amt_scaled_1983", "stem_lean_dir_1983", "stem_lean_amt_1991", "stem_lean_dir_1991", "stem_lean_amt_2000", "stem_lean_dir_2000",
"crown_width_NS_1983_m", "crown_width_EW_1983_m", "height_to_crown_1983_m", "fill_perc_1983", "BSD_1983", "radial_10year_inc_1983_mm", "DBH_1991_cm", "DBH_2000_cm", "height_2000_m", "tree_code_2000", "fire_code_2000", "unknown_dummy", "comments")
stand1_clean <- rbind(column_names, stand1)
stand1_clean <- janitor::row_to_names(stand1_clean, row_number = 1)
stand1_clean <- stand1_clean[-c(1:6),]
# each df has different numbers of rows at the beginning, so need to change them seperately:
stand2_clean <- rbind(column_names, stand2)
stand2_clean <- janitor::row_to_names(stand2_clean, row_number = 1)
stand2_clean <- stand2_clean[-c(1:5),]
stand3_clean <- rbind(column_names, stand3)
stand3_clean <- janitor::row_to_names(stand3_clean, row_number = 1)
stand3_clean <- stand3_clean[-c(1:5),]
stand4_clean <- rbind(column_names, stand4)
stand4_clean <- janitor::row_to_names(stand4_clean, row_number = 1)
stand4_clean <- stand4_clean[-c(1:5),]
stand5_clean <- rbind(column_names, stand5)
stand5_clean <- janitor::row_to_names(stand5_clean, row_number = 1)
stand5_clean <- stand5_clean[-c(1:4),]
stand6_clean <- rbind(column_names, stand6)
stand6_clean <- janitor::row_to_names(stand6_clean, row_number = 1)
stand6_clean <- stand6_clean[-c(1:5),]
stand7_clean <- rbind(column_names, stand7)
stand7_clean <- janitor::row_to_names(stand7_clean, row_number = 1)
stand7_clean <- stand7_clean[-c(1:5),]
stand8_clean <- rbind(column_names, stand8)
stand8_clean <- janitor::row_to_names(stand8_clean, row_number = 1)
stand8_clean <- stand8_clean[-c(1:5),]
#bind them into one data frame:
tree_dyn <- do.call("rbind", list(stand1_clean, stand2_clean, stand3_clean, stand4_clean, stand5_clean, stand6_clean, stand7_clean, stand8_clean))
# remove blank rows
tree_dyn <- tree_dyn[c(1:7335),]
# change periods to NA's:
is.na(tree_dyn) <- tree_dyn == "."
# there are two X species - what are these??
# they are supposed to be "S" species - says so on data sheet!
tree_dyn$species_code[tree_dyn$tag == "5270"]  <- "S"
tree_dyn$species_code[tree_dyn$tag == "5271"]  <- "S"
# changing these species codes to match the ones used in vascular surveys:
#- species codes: A = POTR, B = BEPA, F = ABBA, J = PIBA, L = LALA, P = POBA, S = PIMA, W = PIGL
tree_dyn$species_code[tree_dyn$species_code == "A"]  <- "POTR"
tree_dyn$species_code[tree_dyn$species_code == "B"]  <- "BEPA"
tree_dyn$species_code[tree_dyn$species_code == "F"]  <- "ABBA"
tree_dyn$species_code[tree_dyn$species_code == "J"]  <- "PIBA"
tree_dyn$species_code[tree_dyn$species_code == "L"]  <- "LALA"
tree_dyn$species_code[tree_dyn$species_code == "P"]  <- "POTR"
tree_dyn$species_code[tree_dyn$species_code == "S"]  <- "PIMA"
tree_dyn$species_code[tree_dyn$species_code == "W"]  <- "PIGL"
unique(tree_dyn$species_code)
# change dbh in 1983 from inches to cm (like the rest of the dbh measurements)
tree_dyn2 <-  tree_dyn %>%
mutate(DBH_1983_in = as.numeric(DBH_1983_in),
DBH_1983_cm = DBH_1983_in * 2.54,
DBH_1983_cm = round(DBH_1983_cm, 2)) %>%
select(-DBH_1983_in) %>%
relocate(DBH_1983_cm, .after = species_code)
# change dbh in 1983 from inches to cm (like the rest of the dbh measurements)
tree_dyn2 <-  tree_dyn %>%
mutate(DBH_1983_in = as.numeric(DBH_1983_in),
DBH_1983_cm = DBH_1983_in * 2.5) %>%
select(-DBH_1983_in) %>%
relocate(DBH_1983_cm, .after = species_code)
# change dbh in 1983 from inches to cm (like the rest of the dbh measurements)
tree_dyn2 <-  tree_dyn %>%
mutate(DBH_1983_in = as.numeric(DBH_1983_in),
DBH_1983_cm = DBH_1983_in * 2.5,
DBH_1983_cm = round(DBH_1983_cm, 2)) %>% #change to one decimal point
select(-DBH_1983_in) %>%
relocate(DBH_1983_cm, .after = species_code)
# change dbh in 1983 from inches to cm (like the rest of the dbh measurements)
tree_dyn2 <-  tree_dyn %>%
mutate(DBH_1983_in = as.numeric(DBH_1983_in),
DBH_1983_cm = DBH_1983_in * 2.5,
DBH_1983_cm = round(DBH_1983_cm, 1)) %>% #change to one decimal point
select(-DBH_1983_in) %>%
relocate(DBH_1983_cm, .after = species_code)
source('C:/Users/Jenna/OneDrive - The University Of British Columbia/LDP/Tree Dynamics/Scripts/TreeDynamics_ReadInCleaning.R')
source('C:/Users/Jenna/OneDrive - The University Of British Columbia/LDP/Tree Dynamics/Scripts/TreeDynamics_ReadInCleaning.R')
